- platform: uptime
  name: Home Assistant uptime

# Dutch post packages delivery API    
#- platform: postnl
#  username: !secret post_nl_loginname
#  password: !secret post_nl_password

# Home assistant host monitoring
- platform: systemmonitor
  resources:
    - type: disk_use
      arg: /
    - type: disk_free
      arg: /
    - type: disk_use_percent
      arg: /
    - type: memory_use
    - type: memory_free
    - type: memory_use_percent
    - type: load_1m
    - type: load_5m
    - type: load_15m
    - type: network_in
      arg: eth0
    - type: network_out
      arg: eth0
    - type: packets_in
      arg: eth0
    - type: packets_out
      arg: eth0
    - type: throughput_network_in
      arg: eth0
    - type: throughput_network_out
      arg: eth0
    - type: processor_use

# Cpu temp
- platform: command_line
  name: cpu temperature
  unit_of_measurement: c
  scan_interval: 60
  command: 'cat /sys/class/thermal/thermal_zone*/temp | sed "s/\(.\)..$/.\1/" | sed -n 3p'

# Electricity & gas consumption API 
- platform: dsmr
  host: !secret dsmr_ip_address
  port: 2001
  dsmr_version: 5

# Check home assistant certificate expiry  
- platform: command_line
  name: SSL cert expiry
  unit_of_measurement: days
  scan_interval: 10800
  # certificate expiry check: https://github.com/Matty9191/ssl-cert-check
  command: "/ssl/ssl-cert-check -b -c /ssl/fullchain.pem | awk '{ print $NF }'"

# Check home assistant host uptime
- platform: command_line
  name: Host uptime
  unit_of_measurement: days
  scan_interval: 3600
  command: echo $(($(cat /proc/uptime | sed 's/^\([0-9]*\)[ \.].*$/\1/g') / 86400))

- platform: template
  sensors:
    
    # Dutch rail road API  
    trein_utrecht_amsterdam_zuid_departure_going:
      friendly_name: vertrekt
      value_template: ‘{{ states.sensor.utrecht_amsterdam_zuid.attributes.going }}’
    trein_utrecht_amsterdam_zuid_departure_time_planned:
      friendly_name: vertrek gepland om
      value_template: ‘{{ states.sensor.utrecht_amsterdam_zuid.attributes.departure_time_planned }}’
    trein_utrecht_amsterdam_zuid_departure_time_actual:
      friendly_name: actuele vertrekttijd
      value_template: ‘{{ states.sensor.utrecht_amsterdam_zuid.attributes.departure_time_actual }}’
    trein_utrecht_amsterdam_zuid_departure_delay:
      friendly_name: vertrek vertraging
      value_template: ‘{{ states.sensor.utrecht_amsterdam_zuid.attributes.departure_delay }}’
    trein_utrecht_amsterdam_zuid_departure_platform:
      friendly_name: vertrekt vanaf perron
      value_template: ‘{{ states.sensor.utrecht_amsterdam_zuid.attributes.departure_platform }}’
    trein_utrecht_amsterdam_zuid_departure_platform_changed:
      friendly_name: vertrek perron gewijzigd
      value_template: ‘{{ states.sensor.utrecht_amsterdam_zuid.attributes.departure_platform_changed }}’
    trein_utrecht_amsterdam_zuid_arrival_time_planned:
      friendly_name: geplande aankomst
      value_template: ‘{{ states.sensor.utrecht_amsterdam_zuid.attributes.arrival_time_planned }}’
    trein_utrecht_amsterdam_zuid_arrival_time_actual:
      friendly_name: actuele aankomst
      value_template: ‘{{ states.sensor.utrecht_amsterdam_zuid.attributes.arrival_time_actual }}’
    trein_utrecht_amsterdam_zuid_arrival_delay:
      friendly_name: aankomst vertraging
      value_template: ‘{{ states.sensor.utrecht_amsterdam_zuid.attributes.arrival_delay }}’
    trein_utrecht_amsterdam_zuid_arrival_platform:
      friendly_name: komt aan op perron
      value_template: ‘{{ states.sensor.utrecht_amsterdam_zuid.attributes.arrival_platform }}’
    trein_utrecht_amsterdam_zuid_arrival_platform_changed:
      friendly_name: aankomst perron gewijzigd
      value_template: ‘{{ states.sensor.utrecht_amsterdam_zuid.attributes.arrival_platform_changed }}’
    trein_utrecht_amsterdam_zuid_next:
      friendly_name: volgende
      value_template: ‘{{ states.sensor.utrecht_amsterdam_zuid.attributes.next }}’
    trein_utrecht_amsterdam_zuid_status:
      friendly_name: status
      value_template: ‘{{ states.sensor.utrecht_amsterdam_zuid.attributes.status }}’
    trein_utrecht_amsterdam_zuid_transfers:
      friendly_name: overstaps
      value_template: ‘{{ states.sensor.utrecht_amsterdam_zuid.attributes.transfers }}’
    trein_utrecht_amsterdam_zuid_remarks:
      friendly_name: opmerkingen
      value_template: ‘{{ states.sensor.utrecht_amsterdam_zuid.attributes.remarks }}’
    trein_amsterdam_zuid_utrecht_departure_going:
      friendly_name: vertrekt
      value_template: ‘{{ states.sensor.amsterdam_zuid_utrecht_cs.attributes.going }}’
    trein_amsterdam_zuid_utrecht_departure_time_planned:
      friendly_name: vertrek gepland om
      value_template: ‘{{ states.sensor.amsterdam_zuid_utrecht_cs.attributes.departure_time_planned }}’
    trein_amsterdam_zuid_utrecht_departure_time_actual:
      friendly_name: actuele vertrekttijd
      value_template: ‘{{ states.sensor.amsterdam_zuid_utrecht_cs.attributes.departure_time_actual }}’
    trein_amsterdam_zuid_utrecht_departure_delay:
      friendly_name: vertrek vertraging
      value_template: ‘{{ states.sensor.amsterdam_zuid_utrecht_cs.attributes.departure_delay }}’
    trein_amsterdam_zuid_utrecht_departure_platform:
      friendly_name: vertrekt vanaf perron
      value_template: ‘{{ states.sensor.amsterdam_zuid_utrecht_cs.attributes.departure_platform }}’
    trein_amsterdam_zuid_utrecht_departure_platform_changed:
      friendly_name: vertrek perron gewijzigd
      value_template: ‘{{ states.sensor.amsterdam_zuid_utrecht_cs.attributes.departure_platform_changed }}’
    trein_amsterdam_zuid_utrecht_arrival_time_planned:
      friendly_name: geplande aankomst
      value_template: ‘{{ states.sensor.amsterdam_zuid_utrecht_cs.attributes.arrival_time_planned }}’
    trein_amsterdam_zuid_utrecht_arrival_time_actual:
      friendly_name: actuele aankomst
      value_template: ‘{{ states.sensor.amsterdam_zuid_utrecht_cs.attributes.arrival_time_actual }}’
    trein_amsterdam_zuid_utrecht_arrival_delay:
      friendly_name: aankomst vertraging
      value_template: ‘{{ states.sensor.amsterdam_zuid_utrecht_cs.attributes.arrival_delay }}’
    trein_amsterdam_zuid_utrecht_arrival_platform:
      friendly_name: komt aan op perron
      value_template: ‘{{ states.sensor.amsterdam_zuid_utrecht_cs.attributes.arrival_platform }}’
    trein_amsterdam_zuid_utrecht_arrival_platform_changed:
      friendly_name: aankomst perron gewijzigd
      value_template: ‘{{ states.sensor.amsterdam_zuid_utrecht_cs.attributes.arrival_platform_changed }}’
    trein_amsterdam_zuid_utrecht_next:
      friendly_name: volgende
      value_template: ‘{{ states.sensor.amsterdam_zuid_utrecht_cs.attributes.next }}’
    trein_amsterdam_zuid_utrecht_status:
      friendly_name: status
      value_template: ‘{{ states.sensor.amsterdam_zuid_utrecht_cs.attributes.status }}’
    trein_amsterdam_zuid_utrecht_transfers:
      friendly_name: overstaps
      value_template: ‘{{ states.sensor.amsterdam_zuid_utrecht_cs.attributes.transfers }}’
    trein_amsterdam_zuid_utrecht_remarks:
      friendly_name: opmerkingen
      value_template: ‘{{ states.sensor.amsterdam_zuid_utrecht_cs.attributes.remarks }}’

# Dutch Air Quality Sensor, https://www.luchtmeetnet.nl
- platform: rest
  name: airquality_NO2
  resource: https://api.luchtmeetnet.nl/open_api/stations/NL10643/measurements?page=&order=&order_direction=&formula=NO2
  unit_of_measurement: µg/m3
  value_template: '{{ value_json.data[0].value }}'
- platform: rest
  name: airquality_PM10
  resource: https://api.luchtmeetnet.nl/open_api/stations/NL10643/measurements?page=&order=&order_direction=&formula=PM10
  unit_of_measurement: µg/m3
  value_template: '{{ value_json.data[0].value }}'
- platform: rest
  name: airquality_PM25
  resource: https://api.luchtmeetnet.nl/open_api/stations/NL10643/measurements?page=&order=&order_direction=&formula=PM25
  unit_of_measurement: µg/m3
  value_template: '{{ value_json.data[0].value }}'
- platform: rest
  name: airquality_O3
  resource: https://api.luchtmeetnet.nl/open_api/stations/NL49014/measurements?page=&order=&order_direction=&formula=O3
  unit_of_measurement: µg/m3
  value_template: '{{ value_json.data[0].value }}'
- platform: template
  sensors:
    airquality_no2_index:
      friendly_name: 'Luchtkwaliteit NO2 Index'
      entity_id: sensor.airquality_no2
      value_template: >
        {% set NO2 = states.sensor.airquality_no2.state %}
        {%- if NO2 | int < 10 -%}
        1 
        {%- elif NO2 | int < 20 -%}
        2
        {%- elif NO2 | int < 30 -%}
        3
        {%- elif NO2 | int < 45 -%}
        4
        {%- elif NO2 | int < 60 -%}
        5
        {%- elif NO2 | int < 75 -%}
        6
        {%- elif NO2 | int < 100 -%}
        7
        {%- elif NO2 | int < 125 -%}
        8
        {%- elif NO2 | int < 150 -%}
        9
        {%- elif NO2 | int < 200 -%}
        10
        {%- else %}
        11
        {%- endif %}
- platform: template
  sensors:
    airquality_pm10_index:
      friendly_name: 'Luchtkwaliteit PM10 Index'
      entity_id: sensor.airquality_pm10
      value_template: >
        {% set PM10 = states.sensor.airquality_pm10.state %}
        {%- if PM10 | int < 10 -%}
        1 
        {%- elif PM10 | int < 20 -%}
        2
        {%- elif PM10 | int < 30 -%}
        3
        {%- elif PM10 | int < 45 -%}
        4
        {%- elif PM10 | int < 60 -%}
        5
        {%- elif PM10 | int < 75 -%}
        6
        {%- elif PM10 | int < 100 -%}
        7
        {%- elif PM10 | int < 125 -%}
        8
        {%- elif PM10 | int < 150 -%}
        9
        {%- elif PM10 | int < 200 -%}
        10
        {%- else %}
        11
        {%- endif %}
- platform: template
  sensors:
    airquality_pm25_index:
      friendly_name: 'Luchtkwaliteit PM25 Index'
      entity_id: sensor.airquality_pm25
      value_template: >
        {% set PM25 = states.sensor.airquality_pm25.state %}
        {%- if PM25 | int < 10 -%}
        1 
        {%- elif PM25 | int < 15 -%}
        2
        {%- elif PM25 | int < 20 -%}
        3
        {%- elif PM25 | int < 30 -%}
        4
        {%- elif PM25 | int < 40 -%}
        5
        {%- elif PM25 | int < 50 -%}
        6
        {%- elif PM25 | int < 70 -%}
        7
        {%- elif PM25 | int < 90 -%}
        8
        {%- elif PM25 | int < 100 -%}
        9
        {%- elif PM25 | int < 140 -%}
        10
        {%- else %}
        11
        {%- endif %}
- platform: template
  sensors:
    airquality_o3_index:
      friendly_name: 'Luchtkwaliteit O3 Index'
      entity_id: sensor.airquality_o3
      value_template: >
        {% set O3 = states.sensor.airquality_o3.state %}
        {%- if O3 | int < 15 -%}
        1 
        {%- elif O3 | int < 30 -%}
        2
        {%- elif O3 | int < 40 -%}
        3
        {%- elif O3 | int < 60 -%}
        4
        {%- elif O3 | int < 80 -%}
        5
        {%- elif O3 | int < 100 -%}
        6
        {%- elif O3 | int < 140 -%}
        7
        {%- elif O3 | int < 180 -%}
        8
        {%- elif O3 | int < 200 -%}
        9
        {%- elif O3 | int < 240 -%}
        10
        {%- else %}
        11
        {%- endif %}
- platform: template
  sensors:
    airquality_combined_index:
      friendly_name: 'Luchtkwaliteit Index'
      unit_of_measurement: index
      value_template: >
        {% set NO2 = states.sensor.airquality_no2_index.state %}
        {% set O3 = states.sensor.airquality_o3_index.state %}
        {% set PM10 = states.sensor.airquality_pm10_index.state %}
        {% set PM25 = states.sensor.airquality_pm25_index.state %}
        
        {%set mylist = states("sensor.airquality_no2_index")|int,
                states("sensor.airquality_o3_index")|int,
                states("sensor.airquality_pm10_index")|int,
                states("sensor.airquality_pm25_index")|int %}
                
          {% if NO2 | int == O3 | int == PM10 | int == PM25 | int -%}
          {% set Index = NO2 | int + 1 %}
          {{Index | int}}
          {%- else -%}
          {{ mylist|max | int }}
          {%- endif %}

##############################################################
- platform: mqtt
  name: Zigbee2mqtt Bridge state
  state_topic: "zigbee2mqtt/bridge/state"
  icon: mdi:router-wireless
- platform: mqtt
  name: Zigbee2mqtt Version
  state_topic: "zigbee2mqtt/bridge/config"
  value_template: "{{ value_json.version }}"
  icon: mdi:zigbee
# Sensor for Showing the Coordinator Version
- platform: mqtt
  name: Coordinator Version
  state_topic: "zigbee2mqtt/bridge/config"
  value_template: "{{ value_json.coordinator }}"
  icon: mdi:chip

##############################################################
- platform: mqtt
  state_topic: "basic1/tele/STATE"
  name: "basic1 signal"
  unit_of_measurement: "%"
  value_template: "{{value_json['Wifi'].RSSI }}"
  availability_topic: "basic1/tele/LWT"
  payload_available: "Online"
  payload_not_available: "Offline"

- platform: mqtt
  state_topic: "basic2/tele/STATE"
  name: "basic2 signal"
  unit_of_measurement: "%"
  value_template: "{{value_json['Wifi'].RSSI }}"
  availability_topic: "basic2/tele/LWT"
  payload_available: "Online"
  payload_not_available: "Offline"

- platform: mqtt
  state_topic: "basic3/tele/STATE"
  name: "basic3 signal"
  unit_of_measurement: "%"
  value_template: "{{value_json['Wifi'].RSSI }}"
  availability_topic: "basic3/tele/LWT"
  payload_available: "Online"
  payload_not_available: "Offline"

- platform: mqtt
  state_topic: "plug1/tele/STATE"
  name: "plug1 signal"
  unit_of_measurement: "%"
  value_template: "{{value_json['Wifi'].RSSI }}"
  availability_topic: "plug1/tele/LWT"
  payload_available: "Online"
  payload_not_available: "Offline"

- platform: mqtt
  state_topic: "plug2/tele/STATE"
  name: "plug2 signal"
  unit_of_measurement: "%"
  value_template: "{{value_json['Wifi'].RSSI }}"
  availability_topic: "plug2/tele/LWT"
  payload_available: "Online"
  payload_not_available: "Offline"

- platform: mqtt
  state_topic: "pow1/tele/STATE"
  name: "pow1 signal"
  unit_of_measurement: "%"
  value_template: "{{value_json['Wifi'].RSSI }}"
  availability_topic: "pow1/tele/LWT"
  payload_available: "Online"
  payload_not_available: "Offline"

- platform: mqtt
  state_topic: "pow2/tele/STATE"
  name: "pow2 signal"
  unit_of_measurement: "%"
  value_template: "{{value_json['Wifi'].RSSI }}"
  availability_topic: "pow2/tele/LWT"
  payload_available: "Online"
  payload_not_available: "Offline"

- platform: mqtt
  state_topic: "rfbridge1/tele/STATE"
  name: "rfbridge1 signal"
  unit_of_measurement: "%"
  value_template: "{{value_json['Wifi'].RSSI }}"
  availability_topic: "rfbridge1/tele/LWT"
  payload_available: "Online"
  payload_not_available: "Offline"

